const axios = require('axios');

const BASE_URL = 'http://localhost:3001/api/v1/customers';

async function testCustomerService() {
  console.log('üß™ Iniciando pruebas del servicio de clientes...\n');

  try {
    // 1. Health Check
    console.log('1Ô∏è‚É£ Probando Health Check...');
    const healthResponse = await axios.get(`${BASE_URL}/health`);
    console.log('‚úÖ Health Check:', healthResponse.data);
    console.log('');

    // 2. Onboarding de cliente
    console.log('2Ô∏è‚É£ Probando Onboarding de cliente...');
    const onboardData = {
      name: 'Mar√≠a Garc√≠a',
      email: 'maria.garcia@email.com',
      phone: '+34612345678',
      documentType: 'DNI',
      documentNumber: '87654321A',
      birthDate: '1985-05-15',
      address: 'Calle Mayor 456',
      city: 'Barcelona',
      country: 'Espa√±a'
    };

    const onboardResponse = await axios.post(`${BASE_URL}/onboard`, onboardData);
    console.log('‚úÖ Cliente onboarded:', onboardResponse.data);
    const customerId = onboardResponse.data.customerId;
    console.log('');

    // 3. Obtener cliente espec√≠fico
    console.log('3Ô∏è‚É£ Probando obtener cliente espec√≠fico...');
    const getCustomerResponse = await axios.get(`${BASE_URL}/${customerId}`);
    console.log('‚úÖ Cliente obtenido:', getCustomerResponse.data);
    console.log('');

    // 4. Obtener todos los clientes
    console.log('4Ô∏è‚É£ Probando obtener todos los clientes...');
    const getAllCustomersResponse = await axios.get(`${BASE_URL}`);
    console.log('‚úÖ Todos los clientes:', getAllCustomersResponse.data);
    console.log('');

    // 5. Activar cliente
    console.log('5Ô∏è‚É£ Probando activaci√≥n de cliente...');
    const activateData = {
      customerId: customerId,
      activationReason: 'Documentaci√≥n verificada correctamente'
    };

    const activateResponse = await axios.post(`${BASE_URL}/activate`, activateData);
    console.log('‚úÖ Cliente activado:', activateResponse.data);
    console.log('');

    // 6. Verificar estado despu√©s de activaci√≥n
    console.log('6Ô∏è‚É£ Verificando estado despu√©s de activaci√≥n...');
    const updatedCustomerResponse = await axios.get(`${BASE_URL}/${customerId}`);
    console.log('‚úÖ Cliente actualizado:', updatedCustomerResponse.data);
    console.log('');

    // 7. Desactivar cliente
    console.log('7Ô∏è‚É£ Probando desactivaci√≥n de cliente...');
    const deactivateData = {
      customerId: customerId,
      deactivationReason: 'Solicitud del cliente'
    };

    const deactivateResponse = await axios.post(`${BASE_URL}/deactivate`, deactivateData);
    console.log('‚úÖ Cliente desactivado:', deactivateResponse.data);
    console.log('');

    // 8. Verificar estado final
    console.log('8Ô∏è‚É£ Verificando estado final...');
    const finalCustomerResponse = await axios.get(`${BASE_URL}/${customerId}`);
    console.log('‚úÖ Estado final del cliente:', finalCustomerResponse.data);
    console.log('');

    console.log('üéâ ¬°Todas las pruebas completadas exitosamente!');
    console.log('üìä Resumen:');
    console.log('   - Health Check: ‚úÖ');
    console.log('   - Onboarding: ‚úÖ');
    console.log('   - Obtener cliente: ‚úÖ');
    console.log('   - Listar clientes: ‚úÖ');
    console.log('   - Activaci√≥n: ‚úÖ');
    console.log('   - Desactivaci√≥n: ‚úÖ');
    console.log('   - Verificaci√≥n de estados: ‚úÖ');

  } catch (error) {
    console.error('‚ùå Error durante las pruebas:', error.message);
    if (error.response) {
      console.error('üìã Detalles del error:', error.response.data);
    }
    process.exit(1);
  }
}

// Ejecutar pruebas
testCustomerService(); 